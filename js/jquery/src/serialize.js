// build time:Wed Apr 15 2020 21:36:38 GMT+0800 (GMT+08:00)
define(["./core","./core/toType","./var/rcheckableType","./var/isFunction","./core/init","./traversing","./attributes/prop"],function(e,r,n,t){"use strict";var i=/\[\]$/,a=/\r?\n/g,s=/^(?:submit|button|image|reset|file)$/i,u=/^(?:input|select|textarea|keygen)/i;function o(n,t,a,s){var u;if(Array.isArray(t)){e.each(t,function(e,r){if(a||i.test(n)){s(n,r)}else{o(n+"["+(typeof r==="object"&&r!=null?e:"")+"]",r,a,s)}})}else if(!a&&r(t)==="object"){for(u in t){o(n+"["+u+"]",t[u],a,s)}}else{s(n,t)}}e.param=function(r,n){var i,a=[],s=function(e,r){var n=t(r)?r():r;a[a.length]=encodeURIComponent(e)+"="+encodeURIComponent(n==null?"":n)};if(r==null){return""}if(Array.isArray(r)||r.jquery&&!e.isPlainObject(r)){e.each(r,function(){s(this.name,this.value)})}else{for(i in r){o(i,r[i],n,s)}}return a.join("&")};e.fn.extend({serialize:function(){return e.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var r=e.prop(this,"elements");return r?e.makeArray(r):this}).filter(function(){var r=this.type;return this.name&&!e(this).is(":disabled")&&u.test(this.nodeName)&&!s.test(r)&&(this.checked||!n.test(r))}).map(function(r,n){var t=e(this).val();if(t==null){return null}if(Array.isArray(t)){return e.map(t,function(e){return{name:n.name,value:e.replace(a,"\r\n")}})}return{name:n.name,value:t.replace(a,"\r\n")}}).get()}});return e});
//rebuild by neat 