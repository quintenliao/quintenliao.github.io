// build time:Wed Apr 15 2020 21:36:38 GMT+0800 (GMT+08:00)
define(["./core","./var/indexOf","./traversing/var/dir","./traversing/var/siblings","./traversing/var/rneedsContext","./core/nodeName","./core/init","./traversing/findFilter","./selector"],function(t,n,e,r,i,u){"use strict";var o=/^(?:parents|prev(?:Until|All))/,s={children:true,contents:true,next:true,prev:true};t.fn.extend({has:function(n){var e=t(n,this),r=e.length;return this.filter(function(){var n=0;for(;n<r;n++){if(t.contains(this,e[n])){return true}}})},closest:function(n,e){var r,u=0,o=this.length,s=[],f=typeof n!=="string"&&t(n);if(!i.test(n)){for(;u<o;u++){for(r=this[u];r&&r!==e;r=r.parentNode){if(r.nodeType<11&&(f?f.index(r)>-1:r.nodeType===1&&t.find.matchesSelector(r,n))){s.push(r);break}}}}return this.pushStack(s.length>1?t.uniqueSort(s):s)},index:function(e){if(!e){return this[0]&&this[0].parentNode?this.first().prevAll().length:-1}if(typeof e==="string"){return n.call(t(e),this[0])}return n.call(this,e.jquery?e[0]:e)},add:function(n,e){return this.pushStack(t.uniqueSort(t.merge(this.get(),t(n,e))))},addBack:function(t){return this.add(t==null?this.prevObject:this.prevObject.filter(t))}});function f(t,n){while((t=t[n])&&t.nodeType!==1){}return t}t.each({parent:function(t){var n=t.parentNode;return n&&n.nodeType!==11?n:null},parents:function(t){return e(t,"parentNode")},parentsUntil:function(t,n,r){return e(t,"parentNode",r)},next:function(t){return f(t,"nextSibling")},prev:function(t){return f(t,"previousSibling")},nextAll:function(t){return e(t,"nextSibling")},prevAll:function(t){return e(t,"previousSibling")},nextUntil:function(t,n,r){return e(t,"nextSibling",r)},prevUntil:function(t,n,r){return e(t,"previousSibling",r)},siblings:function(t){return r((t.parentNode||{}).firstChild,t)},children:function(t){return r(t.firstChild)},contents:function(n){if(typeof n.contentDocument!=="undefined"){return n.contentDocument}if(u(n,"template")){n=n.content||n}return t.merge([],n.childNodes)}},function(n,e){t.fn[n]=function(r,i){var u=t.map(this,e,r);if(n.slice(-5)!=="Until"){i=r}if(i&&typeof i==="string"){u=t.filter(i,u)}if(this.length>1){if(!s[n]){t.uniqueSort(u)}if(o.test(n)){u.reverse()}}return this.pushStack(u)}});return t});
//rebuild by neat 