// build time:Wed Apr 15 2020 21:36:37 GMT+0800 (GMT+08:00)
define(["./core","./core/nodeName","./core/camelCase","./core/toType","./var/isFunction","./var/isWindow","./var/slice","./event/alias"],function(n,e,i,r,t,a,o){"use strict";n.fn.extend({bind:function(n,e,i){return this.on(n,null,e,i)},unbind:function(n,e){return this.off(n,null,e)},delegate:function(n,e,i,r){return this.on(e,n,i,r)},undelegate:function(n,e,i){return arguments.length===1?this.off(n,"**"):this.off(e,n||"**",i)}});n.proxy=function(e,i){var r,a,u;if(typeof i==="string"){r=e[i];i=e;e=r}if(!t(e)){return undefined}a=o.call(arguments,2);u=function(){return e.apply(i||this,a.concat(o.call(arguments)))};u.guid=e.guid=e.guid||n.guid++;return u};n.holdReady=function(e){if(e){n.readyWait++}else{n.ready(true)}};n.isArray=Array.isArray;n.parseJSON=JSON.parse;n.nodeName=e;n.isFunction=t;n.isWindow=a;n.camelCase=i;n.type=r;n.now=Date.now;n.isNumeric=function(e){var i=n.type(e);return(i==="number"||i==="string")&&!isNaN(e-parseFloat(e))}});
//rebuild by neat 